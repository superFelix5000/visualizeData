{"version":3,"file":"ngx-csv-parser.service.d.ts","sources":["ngx-csv-parser.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Observable, Observer } from 'rxjs';\r\nimport { NgxCSVParserError } from './_model/ngx-csv-parser-error.interface';\r\nexport declare class NgxCsvParser {\r\n    private defaultCSVParserConfig;\r\n    parse(csvFile: File, config: CSVParserConfig): Observable<Array<any> | NgxCSVParserError>;\r\n    csvStringToArray(csvDataString: string, delimiter: string): any[][];\r\n    getDataRecordsArrayFromCSVFile(csvRecordsArray: any, headerLength: any, config: any): any[];\r\n    isCSVFile(file: any): any;\r\n    getHeaderArray(csvRecordsArr: any): any[];\r\n    notCSVFileErrorHandler(observer: Observer<any>): void;\r\n    unknownCSVParserErrorHandler(observer: Observer<any>): void;\r\n    badCSVDataFormatErrorHandler(observer: Observer<any>): void;\r\n    errorBuilder(type: string, message: any, code: any): NgxCSVParserError;\r\n}\r\ndeclare class CSVParserConfig {\r\n    header?: boolean;\r\n    delimiter?: string;\r\n    constructor();\r\n}\r\nexport {};\r\n"]}