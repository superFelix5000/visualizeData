import { Observable, Observer } from 'rxjs';
import { NgxCSVParserError } from './_model/ngx-csv-parser-error.interface';
import * as ɵngcc0 from '@angular/core';
export declare class NgxCsvParser {
    private defaultCSVParserConfig;
    parse(csvFile: File, config: CSVParserConfig): Observable<Array<any> | NgxCSVParserError>;
    csvStringToArray(csvDataString: string, delimiter: string): any[][];
    getDataRecordsArrayFromCSVFile(csvRecordsArray: any, headerLength: any, config: any): any[];
    isCSVFile(file: any): any;
    getHeaderArray(csvRecordsArr: any): any[];
    notCSVFileErrorHandler(observer: Observer<any>): void;
    unknownCSVParserErrorHandler(observer: Observer<any>): void;
    badCSVDataFormatErrorHandler(observer: Observer<any>): void;
    errorBuilder(type: string, message: any, code: any): NgxCSVParserError;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxCsvParser, never>;
}
declare class CSVParserConfig {
    header?: boolean;
    delimiter?: string;
    constructor();
}
export {};

//# sourceMappingURL=ngx-csv-parser.service.d.ts.map