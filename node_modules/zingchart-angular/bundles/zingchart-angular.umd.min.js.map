{"version":3,"sources":["ng://zingchart-angular/lib/zingchart-angular.service.ts","ng://zingchart-angular/lib/zingchart-angular.component.ts","ng://zingchart-angular/lib/zingchart-angular.module.ts"],"names":["ZingchartAngularService","this","count","prototype","getCount","increment","decrement","Injectable","args","providedIn","DEFAULT_WIDTH","constants","DEFAULT_HEIGHT","DEFAULT_OUTPUT","EVENT_NAMES","METHOD_NAMES","ZingchartAngularComponent","service","_this","about_hide","EventEmitter","about_show","animation_end","animation_start","animation_step","beforedestroy","bugreport_hide","bugreport_show","click","complete","data_export","dataexport","dataload","dataparse","dataready","destroy","dimension_change","error","feed_clear","feed_interval_modify","feed_start","feed_stop","gcomplete","gload","gparse","guide_mousemove","guide_mouseout","heatmap_mousemove","history_back","history_forward","image_save","label_click","label_mousedown","label_mouseout","label_mouseover","label_mouseup","legend_hide","legend_item_click","legend_item_mousemove","legend_item_mouseout","legend_item_mouseover","legend_marker_click","legend_maximize","legend_minimize","legend_minimize_click","legend_pagination_click","legend_show","legend_drag_mousedown","lens_hide","lens_show","load","maps_zoom","menu_item_click","modify","modulesready","mousewheel","node_add","node_click","node_deselect","node_doubleclick","node_mousedown","node_mouseout","node_mouseover","node_mouseup","node_remove","node_select","node_set","objectsinit","objectsready","overscroll","plot_add","plot_click","plot_deselect","plot_doubleclick","plot_hide","plot_modify","plot_mouseout","plot_mouseover","plot_remove","plot_select","plot_show","postzoom","print","reload","render","resize","setdata","shape_click","shape_mousedown","shape_mouseout","shape_mouseover","shape_mouseup","source_hide","source_show","swipe","touchemove","touchend","touchstart","zingchart_plugins_selection_tool_mouseup","zingchart_plugins_selection_tool_selection","zoom","chartId","forEach","method","JSON","stringify","zingchart","exec","ngAfterViewInit","data","config","parse","e","Error","series","chartWidth","width","chartHeight","height","output","renderObject","id","theme","event","observers","length","bind","result","emit","ngOnDestroy","ngOnChanges","changes","currentValue","graphid","Component","selector","template","Input","Output","ZingchartAngularModule","NgModule","declarations","imports","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ZingchartAngularService {\n  private count: number = 0;\n\n  constructor() {\n  }\n  getCount() {\n    return this.count;\n  }\n  increment() {\n    this.count++;\n  }\n  decrement() {\n    this.count--;\n  }\n\n}\n","/// <reference path=\"../zingchart.d.ts\" />\nimport { Component, AfterViewInit, OnDestroy, Input, Output, EventEmitter, OnChanges, SimpleChanges} from '@angular/core';\nimport zingchart from 'zingchart/es6';\n\nimport { ZingchartAngularService } from './zingchart-angular.service';\n\nimport constants from 'zingchart-constants';\nconst { DEFAULT_WIDTH, DEFAULT_HEIGHT, DEFAULT_OUTPUT, EVENT_NAMES, METHOD_NAMES } = constants;\n\n\n@Component({\n  selector: 'zingchart-angular',\n  template: `\n    <div id=\"{{chartId}}\"></div>\n  `,\n  styles: [],\n  // providers: [\n  \n})\nexport class ZingchartAngularComponent implements AfterViewInit, OnDestroy, OnChanges {\n  @Input() config: zingchart.graphset;\n  @Input() id: string;\n  @Input() width: string | number;\n  @Input() output: string;\n  @Input() height: string | number;\n  @Input() series: [zingchart.series];\n  // @Input() series: any;\n  @Input() theme: Object;\n\n  @Output() about_hide: EventEmitter<object> = new EventEmitter<object>();\n  @Output() about_show: EventEmitter<object> = new EventEmitter<object>();\n  @Output() animation_end: EventEmitter<object> = new EventEmitter<object>();\n  @Output() animation_start: EventEmitter<object> = new EventEmitter<object>();\n  @Output() animation_step: EventEmitter<object> = new EventEmitter<object>();\n  @Output() beforedestroy: EventEmitter<object> = new EventEmitter<object>();\n  @Output() bugreport_hide: EventEmitter<object> = new EventEmitter<object>();\n  @Output() bugreport_show: EventEmitter<object> = new EventEmitter<object>();\n  @Output() click: EventEmitter<object> = new EventEmitter<object>();\n  @Output() complete: EventEmitter<object> = new EventEmitter<object>();\n  @Output() data_export: EventEmitter<object> = new EventEmitter<object>();\n  @Output() dataexport: EventEmitter<object> = new EventEmitter<object>();\n  @Output() dataload: EventEmitter<object> = new EventEmitter<object>();\n  @Output() dataparse: EventEmitter<object> = new EventEmitter<object>();\n  @Output() dataready: EventEmitter<object> = new EventEmitter<object>();\n  @Output() destroy: EventEmitter<object> = new EventEmitter<object>();\n  @Output() dimension_change: EventEmitter<object> = new EventEmitter<object>();\n  @Output() error: EventEmitter<object> = new EventEmitter<object>();\n  @Output() feed_clear: EventEmitter<object> = new EventEmitter<object>();\n  @Output() feed_interval_modify: EventEmitter<object> = new EventEmitter<object>();\n  @Output() feed_start: EventEmitter<object> = new EventEmitter<object>();\n  @Output() feed_stop: EventEmitter<object> = new EventEmitter<object>();\n  @Output() gcomplete: EventEmitter<object> = new EventEmitter<object>();\n  @Output() gload: EventEmitter<object> = new EventEmitter<object>();\n  @Output() gparse: EventEmitter<object> = new EventEmitter<object>();\n  @Output() guide_mousemove: EventEmitter<object> = new EventEmitter<object>();\n  @Output() guide_mouseout: EventEmitter<object> = new EventEmitter<object>();\n  @Output() heatmap_mousemove: EventEmitter<object> = new EventEmitter<object>();\n  @Output() history_back: EventEmitter<object> = new EventEmitter<object>();\n  @Output() history_forward: EventEmitter<object> = new EventEmitter<object>();\n  @Output() image_save: EventEmitter<object> = new EventEmitter<object>();\n  @Output() label_click: EventEmitter<object> = new EventEmitter<object>();\n  @Output() label_mousedown: EventEmitter<object> = new EventEmitter<object>();\n  @Output() label_mouseout: EventEmitter<object> = new EventEmitter<object>();\n  @Output() label_mouseover: EventEmitter<object> = new EventEmitter<object>();\n  @Output() label_mouseup: EventEmitter<object> = new EventEmitter<object>();\n  @Output() legend_hide: EventEmitter<object> = new EventEmitter<object>();\n  @Output() legend_item_click: EventEmitter<object> = new EventEmitter<object>();\n  @Output() legend_item_mousemove: EventEmitter<object> = new EventEmitter<object>();\n  @Output() legend_item_mouseout: EventEmitter<object> = new EventEmitter<object>();\n  @Output() legend_item_mouseover: EventEmitter<object> = new EventEmitter<object>();\n  @Output() legend_marker_click: EventEmitter<object> = new EventEmitter<object>();\n  @Output() legend_maximize: EventEmitter<object> = new EventEmitter<object>();\n  @Output() legend_minimize: EventEmitter<object> = new EventEmitter<object>();\n  @Output() legend_minimize_click: EventEmitter<object> = new EventEmitter<object>();\n  @Output() legend_pagination_click: EventEmitter<object> = new EventEmitter<object>();\n  @Output() legend_show: EventEmitter<object> = new EventEmitter<object>();\n  @Output() legend_drag_mousedown: EventEmitter<object> = new EventEmitter<object>();\n  @Output() lens_hide: EventEmitter<object> = new EventEmitter<object>();\n  @Output() lens_show: EventEmitter<object> = new EventEmitter<object>();\n  @Output() load: EventEmitter<object> = new EventEmitter<object>();\n  @Output() maps_zoom: EventEmitter<object> = new EventEmitter<object>();\n  @Output() menu_item_click: EventEmitter<object> = new EventEmitter<object>();\n  @Output() modify: EventEmitter<object> = new EventEmitter<object>();\n  @Output() modulesready: EventEmitter<object> = new EventEmitter<object>();\n  @Output() mousewheel: EventEmitter<object> = new EventEmitter<object>();\n  @Output() node_add: EventEmitter<object> = new EventEmitter<object>();\n  @Output() node_click: EventEmitter<object> = new EventEmitter<object>();\n  @Output() node_deselect: EventEmitter<object> = new EventEmitter<object>();\n  @Output() node_doubleclick: EventEmitter<object> = new EventEmitter<object>();\n  @Output() node_mousedown: EventEmitter<object> = new EventEmitter<object>();\n  @Output() node_mouseout: EventEmitter<object> = new EventEmitter<object>();\n  @Output() node_mouseover: EventEmitter<object> = new EventEmitter<object>();\n  @Output() node_mouseup: EventEmitter<object> = new EventEmitter<object>();\n  @Output() node_remove: EventEmitter<object> = new EventEmitter<object>();\n  @Output() node_select: EventEmitter<object> = new EventEmitter<object>();\n  @Output() node_set: EventEmitter<object> = new EventEmitter<object>();\n  @Output() objectsinit: EventEmitter<object> = new EventEmitter<object>();\n  @Output() objectsready: EventEmitter<object> = new EventEmitter<object>();\n  @Output() overscroll: EventEmitter<object> = new EventEmitter<object>();\n  @Output() plot_add: EventEmitter<object> = new EventEmitter<object>();\n  @Output() plot_click: EventEmitter<object> = new EventEmitter<object>();\n  @Output() plot_deselect: EventEmitter<object> = new EventEmitter<object>();\n  @Output() plot_doubleclick: EventEmitter<object> = new EventEmitter<object>();\n  @Output() plot_hide: EventEmitter<object> = new EventEmitter<object>();\n  @Output() plot_modify: EventEmitter<object> = new EventEmitter<object>();\n  @Output() plot_mouseout: EventEmitter<object> = new EventEmitter<object>();\n  @Output() plot_mouseover: EventEmitter<object> = new EventEmitter<object>();\n  @Output() plot_remove: EventEmitter<object> = new EventEmitter<object>();\n  @Output() plot_select: EventEmitter<object> = new EventEmitter<object>();\n  @Output() plot_show: EventEmitter<object> = new EventEmitter<object>();\n  @Output() postzoom: EventEmitter<object> = new EventEmitter<object>();\n  @Output() print: EventEmitter<object> = new EventEmitter<object>();\n  @Output() reload: EventEmitter<object> = new EventEmitter<object>();\n  @Output() render: EventEmitter<object> = new EventEmitter<object>();\n  @Output() resize: EventEmitter<object> = new EventEmitter<object>();\n  @Output() setdata: EventEmitter<object> = new EventEmitter<object>();\n  @Output() shape_click: EventEmitter<object> = new EventEmitter<object>();\n  @Output() shape_mousedown: EventEmitter<object> = new EventEmitter<object>();\n  @Output() shape_mouseout: EventEmitter<object> = new EventEmitter<object>();\n  @Output() shape_mouseover: EventEmitter<object> = new EventEmitter<object>();\n  @Output() shape_mouseup: EventEmitter<object> = new EventEmitter<object>();\n  @Output() source_hide: EventEmitter<object> = new EventEmitter<object>();\n  @Output() source_show: EventEmitter<object> = new EventEmitter<object>();\n  @Output() swipe: EventEmitter<object> = new EventEmitter<object>();\n  @Output() touchemove: EventEmitter<object> = new EventEmitter<object>();\n  @Output() touchend: EventEmitter<object> = new EventEmitter<object>();\n  @Output() touchstart: EventEmitter<object> = new EventEmitter<object>();\n  @Output() zingchart_plugins_selection_tool_mouseup: EventEmitter<object> = new EventEmitter<object>();\n  @Output() zingchart_plugins_selection_tool_selection: EventEmitter<object> = new EventEmitter<object>();\n  @Output() zoom: EventEmitter<object> = new EventEmitter<object>();\n\n  chartId: string;\n  chartWidth: string | number;\n  chartHeight: string | number;\n  renderObject: Object;\n  \n  // constructor(private service: ZingchartAngularService, private ref: ElementRef, private viewRef: ViewContainerRef) { \n  constructor(private service: ZingchartAngularService) { \n    this.service.increment();\n    this.chartId = 'zingchart-ng-' + this.service.getCount();\n    METHOD_NAMES.forEach((method) => {\n      this[method] = (args) => JSON.stringify(zingchart.exec(this.chartId, method, args));\n    });\n  }\n\n  ngAfterViewInit() {\n    let data = this.config;\n    if(typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch(e) {\n        throw new Error('Invalid object');\n      }\n    }\n    if(this.series) {\n      data['series'] = this.series;\n    }\n    this.chartWidth = this.width || DEFAULT_WIDTH;\n    this.chartHeight = this.height || DEFAULT_HEIGHT;\n    this.output = this.output || DEFAULT_OUTPUT;\n    this.renderObject = {\n      id: this.chartId,\n      data: data,\n      width: this.chartWidth,\n      height: this.chartHeight,\n      output: this.output,\n    }\n    if(this.theme) {\n      this.renderObject['defaults'] = this.theme;\n    }\n\n    // Setup event listeners before rendering\n    EVENT_NAMES.forEach((event) => {\n      if(this[event] && this[event].observers && this[event].observers.length) {\n        zingchart.bind(this.chartId, event, ((result) => {\n          this[event].emit(result);\n        }));\n      }\n    });\n    zingchart.render(this.renderObject);\n  }\n  \n  ngOnDestroy() {\n    this.service.decrement();\n    zingchart.exec(this.chartId, 'destroy');  \n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if(changes.config) {\n      zingchart.exec(this.chartId, 'setdata', {\n        data: changes.config.currentValue,\n      });\n    } else if(changes.series) {\n      this.config.series = changes.series.currentValue;\n      zingchart.exec(this.chartId, 'setseriesdata', {\n        graphid: 0,\n        data: this.config.series,\n      });\n    } else if(changes.width || changes.height) {\n      const width = (changes.width && changes.width.currentValue) || this.width;\n      const height = (changes.height && changes.height.currentValue) || this.height;\n      zingchart.exec(this.chartId, 'resize', {\n        width,\n        height,\n      });\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ZingchartAngularComponent } from './zingchart-angular.component';\n\n\n\n@NgModule({\n  declarations: [ZingchartAngularComponent],\n  imports: [\n  ],\n  exports: [ZingchartAngularComponent]\n})\nexport class ZingchartAngularModule { }\n"]}