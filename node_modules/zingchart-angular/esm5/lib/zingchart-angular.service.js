/**
 * @fileoverview added by tsickle
 * Generated from: lib/zingchart-angular.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var ZingchartAngularService = /** @class */ (function () {
    function ZingchartAngularService() {
        this.count = 0;
    }
    /**
     * @return {?}
     */
    ZingchartAngularService.prototype.getCount = /**
     * @return {?}
     */
    function () {
        return this.count;
    };
    /**
     * @return {?}
     */
    ZingchartAngularService.prototype.increment = /**
     * @return {?}
     */
    function () {
        this.count++;
    };
    /**
     * @return {?}
     */
    ZingchartAngularService.prototype.decrement = /**
     * @return {?}
     */
    function () {
        this.count--;
    };
    ZingchartAngularService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    ZingchartAngularService.ctorParameters = function () { return []; };
    /** @nocollapse */ ZingchartAngularService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function ZingchartAngularService_Factory() { return new ZingchartAngularService(); }, token: ZingchartAngularService, providedIn: "root" });
    return ZingchartAngularService;
}());
export { ZingchartAngularService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ZingchartAngularService.prototype.count;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiemluZ2NoYXJ0LWFuZ3VsYXIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3ppbmdjaGFydC1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL3ppbmdjaGFydC1hbmd1bGFyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUUzQztJQU1FO1FBRlEsVUFBSyxHQUFXLENBQUMsQ0FBQztJQUcxQixDQUFDOzs7O0lBQ0QsMENBQVE7OztJQUFSO1FBQ0UsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7Ozs7SUFDRCwyQ0FBUzs7O0lBQVQ7UUFDRSxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDZixDQUFDOzs7O0lBQ0QsMkNBQVM7OztJQUFUO1FBQ0UsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ2YsQ0FBQzs7Z0JBaEJGLFVBQVUsU0FBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7Ozs7O2tDQUpEO0NBb0JDLEFBbEJELElBa0JDO1NBZlksdUJBQXVCOzs7Ozs7SUFDbEMsd0NBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBaaW5nY2hhcnRBbmd1bGFyU2VydmljZSB7XG4gIHByaXZhdGUgY291bnQ6IG51bWJlciA9IDA7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gIH1cbiAgZ2V0Q291bnQoKSB7XG4gICAgcmV0dXJuIHRoaXMuY291bnQ7XG4gIH1cbiAgaW5jcmVtZW50KCkge1xuICAgIHRoaXMuY291bnQrKztcbiAgfVxuICBkZWNyZW1lbnQoKSB7XG4gICAgdGhpcy5jb3VudC0tO1xuICB9XG5cbn1cbiJdfQ==