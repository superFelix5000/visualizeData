/// <reference path="../zingchart.d.ts" />
import { AfterViewInit, OnDestroy, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import zingchart from 'zingchart/es6';
import { ZingchartAngularService } from './zingchart-angular.service';
import * as ɵngcc0 from '@angular/core';
export declare class ZingchartAngularComponent implements AfterViewInit, OnDestroy, OnChanges {
    private service;
    config: zingchart.graphset;
    id: string;
    width: string | number;
    output: string;
    height: string | number;
    series: [zingchart.series];
    theme: Object;
    about_hide: EventEmitter<object>;
    about_show: EventEmitter<object>;
    animation_end: EventEmitter<object>;
    animation_start: EventEmitter<object>;
    animation_step: EventEmitter<object>;
    beforedestroy: EventEmitter<object>;
    bugreport_hide: EventEmitter<object>;
    bugreport_show: EventEmitter<object>;
    click: EventEmitter<object>;
    complete: EventEmitter<object>;
    data_export: EventEmitter<object>;
    dataexport: EventEmitter<object>;
    dataload: EventEmitter<object>;
    dataparse: EventEmitter<object>;
    dataready: EventEmitter<object>;
    destroy: EventEmitter<object>;
    dimension_change: EventEmitter<object>;
    error: EventEmitter<object>;
    feed_clear: EventEmitter<object>;
    feed_interval_modify: EventEmitter<object>;
    feed_start: EventEmitter<object>;
    feed_stop: EventEmitter<object>;
    gcomplete: EventEmitter<object>;
    gload: EventEmitter<object>;
    gparse: EventEmitter<object>;
    guide_mousemove: EventEmitter<object>;
    guide_mouseout: EventEmitter<object>;
    heatmap_mousemove: EventEmitter<object>;
    history_back: EventEmitter<object>;
    history_forward: EventEmitter<object>;
    image_save: EventEmitter<object>;
    label_click: EventEmitter<object>;
    label_mousedown: EventEmitter<object>;
    label_mouseout: EventEmitter<object>;
    label_mouseover: EventEmitter<object>;
    label_mouseup: EventEmitter<object>;
    legend_hide: EventEmitter<object>;
    legend_item_click: EventEmitter<object>;
    legend_item_mousemove: EventEmitter<object>;
    legend_item_mouseout: EventEmitter<object>;
    legend_item_mouseover: EventEmitter<object>;
    legend_marker_click: EventEmitter<object>;
    legend_maximize: EventEmitter<object>;
    legend_minimize: EventEmitter<object>;
    legend_minimize_click: EventEmitter<object>;
    legend_pagination_click: EventEmitter<object>;
    legend_show: EventEmitter<object>;
    legend_drag_mousedown: EventEmitter<object>;
    lens_hide: EventEmitter<object>;
    lens_show: EventEmitter<object>;
    load: EventEmitter<object>;
    maps_zoom: EventEmitter<object>;
    menu_item_click: EventEmitter<object>;
    modify: EventEmitter<object>;
    modulesready: EventEmitter<object>;
    mousewheel: EventEmitter<object>;
    node_add: EventEmitter<object>;
    node_click: EventEmitter<object>;
    node_deselect: EventEmitter<object>;
    node_doubleclick: EventEmitter<object>;
    node_mousedown: EventEmitter<object>;
    node_mouseout: EventEmitter<object>;
    node_mouseover: EventEmitter<object>;
    node_mouseup: EventEmitter<object>;
    node_remove: EventEmitter<object>;
    node_select: EventEmitter<object>;
    node_set: EventEmitter<object>;
    objectsinit: EventEmitter<object>;
    objectsready: EventEmitter<object>;
    overscroll: EventEmitter<object>;
    plot_add: EventEmitter<object>;
    plot_click: EventEmitter<object>;
    plot_deselect: EventEmitter<object>;
    plot_doubleclick: EventEmitter<object>;
    plot_hide: EventEmitter<object>;
    plot_modify: EventEmitter<object>;
    plot_mouseout: EventEmitter<object>;
    plot_mouseover: EventEmitter<object>;
    plot_remove: EventEmitter<object>;
    plot_select: EventEmitter<object>;
    plot_show: EventEmitter<object>;
    postzoom: EventEmitter<object>;
    print: EventEmitter<object>;
    reload: EventEmitter<object>;
    render: EventEmitter<object>;
    resize: EventEmitter<object>;
    setdata: EventEmitter<object>;
    shape_click: EventEmitter<object>;
    shape_mousedown: EventEmitter<object>;
    shape_mouseout: EventEmitter<object>;
    shape_mouseover: EventEmitter<object>;
    shape_mouseup: EventEmitter<object>;
    source_hide: EventEmitter<object>;
    source_show: EventEmitter<object>;
    swipe: EventEmitter<object>;
    touchemove: EventEmitter<object>;
    touchend: EventEmitter<object>;
    touchstart: EventEmitter<object>;
    zingchart_plugins_selection_tool_mouseup: EventEmitter<object>;
    zingchart_plugins_selection_tool_selection: EventEmitter<object>;
    zoom: EventEmitter<object>;
    chartId: string;
    chartWidth: string | number;
    chartHeight: string | number;
    renderObject: Object;
    constructor(service: ZingchartAngularService);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ZingchartAngularComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ZingchartAngularComponent, "zingchart-angular", never, { "output": "output"; "config": "config"; "id": "id"; "width": "width"; "height": "height"; "series": "series"; "theme": "theme"; }, { "about_hide": "about_hide"; "about_show": "about_show"; "animation_end": "animation_end"; "animation_start": "animation_start"; "animation_step": "animation_step"; "beforedestroy": "beforedestroy"; "bugreport_hide": "bugreport_hide"; "bugreport_show": "bugreport_show"; "click": "click"; "complete": "complete"; "data_export": "data_export"; "dataexport": "dataexport"; "dataload": "dataload"; "dataparse": "dataparse"; "dataready": "dataready"; "destroy": "destroy"; "dimension_change": "dimension_change"; "error": "error"; "feed_clear": "feed_clear"; "feed_interval_modify": "feed_interval_modify"; "feed_start": "feed_start"; "feed_stop": "feed_stop"; "gcomplete": "gcomplete"; "gload": "gload"; "gparse": "gparse"; "guide_mousemove": "guide_mousemove"; "guide_mouseout": "guide_mouseout"; "heatmap_mousemove": "heatmap_mousemove"; "history_back": "history_back"; "history_forward": "history_forward"; "image_save": "image_save"; "label_click": "label_click"; "label_mousedown": "label_mousedown"; "label_mouseout": "label_mouseout"; "label_mouseover": "label_mouseover"; "label_mouseup": "label_mouseup"; "legend_hide": "legend_hide"; "legend_item_click": "legend_item_click"; "legend_item_mousemove": "legend_item_mousemove"; "legend_item_mouseout": "legend_item_mouseout"; "legend_item_mouseover": "legend_item_mouseover"; "legend_marker_click": "legend_marker_click"; "legend_maximize": "legend_maximize"; "legend_minimize": "legend_minimize"; "legend_minimize_click": "legend_minimize_click"; "legend_pagination_click": "legend_pagination_click"; "legend_show": "legend_show"; "legend_drag_mousedown": "legend_drag_mousedown"; "lens_hide": "lens_hide"; "lens_show": "lens_show"; "load": "load"; "maps_zoom": "maps_zoom"; "menu_item_click": "menu_item_click"; "modify": "modify"; "modulesready": "modulesready"; "mousewheel": "mousewheel"; "node_add": "node_add"; "node_click": "node_click"; "node_deselect": "node_deselect"; "node_doubleclick": "node_doubleclick"; "node_mousedown": "node_mousedown"; "node_mouseout": "node_mouseout"; "node_mouseover": "node_mouseover"; "node_mouseup": "node_mouseup"; "node_remove": "node_remove"; "node_select": "node_select"; "node_set": "node_set"; "objectsinit": "objectsinit"; "objectsready": "objectsready"; "overscroll": "overscroll"; "plot_add": "plot_add"; "plot_click": "plot_click"; "plot_deselect": "plot_deselect"; "plot_doubleclick": "plot_doubleclick"; "plot_hide": "plot_hide"; "plot_modify": "plot_modify"; "plot_mouseout": "plot_mouseout"; "plot_mouseover": "plot_mouseover"; "plot_remove": "plot_remove"; "plot_select": "plot_select"; "plot_show": "plot_show"; "postzoom": "postzoom"; "print": "print"; "reload": "reload"; "render": "render"; "resize": "resize"; "setdata": "setdata"; "shape_click": "shape_click"; "shape_mousedown": "shape_mousedown"; "shape_mouseout": "shape_mouseout"; "shape_mouseover": "shape_mouseover"; "shape_mouseup": "shape_mouseup"; "source_hide": "source_hide"; "source_show": "source_show"; "swipe": "swipe"; "touchemove": "touchemove"; "touchend": "touchend"; "touchstart": "touchstart"; "zingchart_plugins_selection_tool_mouseup": "zingchart_plugins_selection_tool_mouseup"; "zingchart_plugins_selection_tool_selection": "zingchart_plugins_selection_tool_selection"; "zoom": "zoom"; }, never, never>;
}

//# sourceMappingURL=zingchart-angular.component.d.ts.map